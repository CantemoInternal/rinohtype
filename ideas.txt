checklist (what is already implemented, is maked by a +)
---------
+ master pages
+ small caps
+ headings
* lists (numbered, unnumbered, definition, ...)
* cross-references
+ hyphenation \u002D
** http://code.google.com/p/python-hyphenator/)
** by inserting soft-hyphens in all words?
* equations
** http://matplotlib.sourceforge.net/users/mathtext.html
** http://matplotlib.sourceforge.net/api/mathtext_api.html
* floats
* figures (external)
* tables
** table editor!
+ in-line text formatting
* headers and footers
* support for multiple backends
** so that we can render to screen to manually place figures
** real-time preview (BaKoMa-TeX)
** equation editor
** http://stackoverflow.com/questions/311118/real-time-latex
* generate XML from rST
* support for DocBook?
* make "debugging" of styles easier
** errors only show up on rendering, which makes it hard to find them
+ ligatures
* PDF specials
* CSS for style specification?
+ unicode
* absolute placement of floats (papers!)
* right-to-left
** use LASi for supporting many languages (or just Pango?)
* (text flow around non-rectangular object)

Alternative for TeX?
http://science.slashdot.org/article.pl?sid=08/07/29/0039201

resources:
* http://en.wikibooks.org/wiki/PostScript_FAQ
* http://www.adobe.com/type/topics/
* http://en.wikipedia.org/wiki/PostScript
* http://www.adobe.com/print/features/psvspdf/
* http://www.fileformat.info/info/unicode/

* http://pybrary.net/pyPdf/
* http://www.python.org/dev/peps/pep-0008/ - style guide for python code
* http://www.ibm.com/developerworks/library/l-pyint.html - introspection

fonts:
* http://ctan.tug.org/tex-archive/info/Free_Math_Font_Survey/survey.html

==============================================================================

problems with tex:
* fonts and encoding (see PyPSG below)
* custom page layouts are difficult
* TeX code is difficult to write/read

ideas:
* OO design
* keep it simple, also at the lowest level, if possible
* actual typesetting in C or C++ (pslib now) - maybe later
* provide constructions for:
    * emphasis, bold, ...
    * floats
    * tables
    * figures
    * equations (using matplotlib's equation rendering)
* Container can contain text:
    * associate:
        * paragraph style
            * font style
            * indenting
            * justification
* user should be able to set variables (input is python file?)
    * conflict with XML input file?
        * use XSLT to generate XML

* http://freshmeat.net/projects/fonttools/
* use PSlib:
    * can do kerning & ligatures
    * can do hypenation
    * will still have problems with font encoding!
* http://www.nongnu.org/pypsg/
    * "The text functons support Type1 fonts and dynamically
        re-encodes them based on unicode(!) input"

another PSLIB: http://gmt.soest.hawaii.edu/gmt/doc/html/pslib.html

